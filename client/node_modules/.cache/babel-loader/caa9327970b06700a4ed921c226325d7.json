{"ast":null,"code":"var _jsxFileName = \"/Users/omalka/Desktop/or/js_studies/chat-app/client/src/components/Signup.js\";\nimport React, { useState } from 'react';\nimport Field from './Field';\nimport FormButton from './FormButton';\nimport chatLogo from '../style/images/mibachat.png';\nimport { isEmail } from 'validator';\n\nfunction Signup() {\n  const [email, setEmail] = useState('');\n  const [nickname, setErrorCodes] = useState('');\n  const [password, setNumAcc] = useState('');\n\n  function handleEmailChange(e) {\n    setEmail(e.target.value);\n  }\n\n  function handleErrorCodesChange(e) {\n    setErrorCodes(e.target.value);\n  }\n\n  function handleNumOfAccChange(e) {\n    setNumAcc(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: chatLogo,\n    alt: \"chatLogo\",\n    className: \"mibachatlogo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signup-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    fieldName: \"Email\",\n    onChange: handleEmailChange,\n    validations: [required, email],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    fieldName: \"Nickname\",\n    onChange: handleErrorCodesChange,\n    validations: [required, vusername],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    fieldName: \"Password\",\n    onChange: handleNumOfAccChange,\n    validations: [required, vpassword],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), addWhitespace(), /*#__PURE__*/React.createElement(FormButton, {\n    email: email,\n    nickname: nickname,\n    password: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }))));\n\n  function addWhitespace() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"This field is required!\");\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"This is not a valid email.\");\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"The username must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, \"The password must be between 6 and 40 characters.\");\n  }\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/omalka/Desktop/or/js_studies/chat-app/client/src/components/Signup.js"],"names":["React","useState","Field","FormButton","chatLogo","isEmail","Signup","email","setEmail","nickname","setErrorCodes","password","setNumAcc","handleEmailChange","e","target","value","handleErrorCodesChange","handleNumOfAccChange","required","vusername","vpassword","addWhitespace","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Field from './Field';\nimport FormButton from './FormButton';\nimport chatLogo from '../style/images/mibachat.png';\nimport { isEmail } from 'validator';\n\nfunction Signup() {\n  const [email, setEmail] = useState('');\n  const [nickname, setErrorCodes] = useState('');\n  const [password, setNumAcc] = useState('');\n\n  function handleEmailChange(e) {\n    setEmail(e.target.value);\n  }\n  function handleErrorCodesChange(e) {\n    setErrorCodes(e.target.value);\n  }\n  function handleNumOfAccChange(e) {\n    setNumAcc(e.target.value);\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <img src={chatLogo} alt=\"chatLogo\" className=\"mibachatlogo\" />\n      <form className=\"signup-form\">\n        <div>\n          <Field\n            fieldName=\"Email\"\n            onChange={handleEmailChange}\n            validations={[required, email]}\n          />\n          <Field\n            fieldName=\"Nickname\"\n            onChange={handleErrorCodesChange}\n            validations={[required, vusername]}\n          />\n          <Field\n            fieldName=\"Password\"\n            onChange={handleNumOfAccChange}\n            validations={[required, vpassword]}\n          />\n          {addWhitespace()}\n          <FormButton email={email} nickname={nickname} password={password} />\n        </div>\n      </form>\n    </div>\n  );\n\n  function addWhitespace() {\n    return (\n      <div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}