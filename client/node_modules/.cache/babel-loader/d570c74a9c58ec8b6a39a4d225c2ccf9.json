{"ast":null,"code":"var _jsxFileName = \"/Users/omalka/Desktop/or/js_studies/chat-app/client/src/components/Register.js\";\nimport React, { useState, useRef } from 'react';\nimport chatLogo from '../style/images/mibachat.png';\nimport { isEmail } from 'validator';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport AuthService from '../services/authService';\n\nfunction Register() {\n  const form = useRef();\n  const [email, setEmail] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleEmailChange(e) {\n    setEmail(e.target.value);\n  }\n\n  function handleNicknameChange(e) {\n    setNickname(e.target.value);\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleRegister(e) {\n    console.log('handleRegister');\n    e.preventDefault();\n    AuthService.register(nickname, email, password).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"signup-form\",\n    onSubmit: handleRegister,\n    ref: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"mb-4\",\n    src: \"../style/images/mibachat.png\",\n    alt: \"\",\n    width: \"72\",\n    height: \"72\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nickname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Nickname\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    className: \"form-control\",\n    name: \"nickname\",\n    maxLength: \"16\",\n    onChange: handleNicknameChange,\n    validations: [required, vefifyUsername],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"email\",\n    onChange: handleEmailChange,\n    validations: [required, verifyEmail],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    className: \"form-control\",\n    maxLength: \"16\",\n    name: \"password\",\n    onChange: handlePasswordChange,\n    validations: [required, verifyPassword],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submitButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Sign Up\")));\n}\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"This field is required!\"));\n  }\n};\n\nconst verifyEmail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, value, \" is not a valid email.\"));\n  }\n};\n\nconst vefifyUsername = (value, props) => {\n  if (value.length < 3 || value.length > props.maxLength) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Nickname must be between 3 and \", props.maxLength, \" characters.\"));\n  }\n};\n\nconst verifyPassword = (value, props) => {\n  if (value.length < 6 || value.length > props.maxLength) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, \"Password must be between 6 and \", props.maxLength, \" characters.\"));\n  }\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/omalka/Desktop/or/js_studies/chat-app/client/src/components/Register.js"],"names":["React","useState","useRef","chatLogo","isEmail","Form","Input","CheckButton","AuthService","Register","form","email","setEmail","nickname","setNickname","password","setPassword","handleEmailChange","e","target","value","handleNicknameChange","handlePasswordChange","handleRegister","console","log","preventDefault","register","then","response","error","required","vefifyUsername","verifyEmail","verifyPassword","props","length","maxLength"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport chatLogo from '../style/images/mibachat.png';\nimport { isEmail } from 'validator';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport AuthService from '../services/authService';\n\nfunction Register() {\n  const form = useRef();\n  const [email, setEmail] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleEmailChange(e) {\n    setEmail(e.target.value);\n  }\n  function handleNicknameChange(e) {\n    setNickname(e.target.value);\n  }\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleRegister(e) {\n    console.log('handleRegister');\n    e.preventDefault();\n    AuthService.register(nickname, email, password).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  return (\n    <Form className=\"signup-form\" onSubmit={handleRegister} ref={form}>\n      <img\n        class=\"mb-4\"\n        src=\"../style/images/mibachat.png\"\n        alt=\"\"\n        width=\"72\"\n        height=\"72\"\n      />\n      <label htmlFor=\"nickname\">Nickname</label>\n      <Input\n        type=\"email\"\n        className=\"form-control\"\n        name=\"nickname\"\n        maxLength=\"16\"\n        onChange={handleNicknameChange}\n        validations={[required, vefifyUsername]}\n      />\n      <label htmlFor=\"email\">Email address</label>\n      <Input\n        type=\"text\"\n        className=\"form-control\"\n        name=\"email\"\n        onChange={handleEmailChange}\n        validations={[required, verifyEmail]}\n      />\n      <label htmlFor=\"password\">Password</label>\n      <Input\n        type=\"password\"\n        className=\"form-control\"\n        maxLength=\"16\"\n        name=\"password\"\n        onChange={handlePasswordChange}\n        validations={[required, verifyPassword]}\n      />\n\n      <div className=\"form-group\">\n        <button className=\"submitButton\">Sign Up</button>\n      </div>\n    </Form>\n  );\n}\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        <p>This field is required!</p>\n      </div>\n    );\n  }\n};\n\nconst verifyEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        <p>{value} is not a valid email.</p>\n      </div>\n    );\n  }\n};\n\nconst vefifyUsername = (value, props) => {\n  if (value.length < 3 || value.length > props.maxLength) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        <p>Nickname must be between 3 and {props.maxLength} characters.</p>\n      </div>\n    );\n  }\n};\n\nconst verifyPassword = (value, props) => {\n  if (value.length < 6 || value.length > props.maxLength) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        <p>Password must be between 6 and {props.maxLength} characters.</p>\n      </div>\n    );\n  }\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}